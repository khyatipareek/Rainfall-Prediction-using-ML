// Circuit-1 tinkercad circuit link: "https://www.tinkercad.com/things/43c9WcNG9Ib-copy-of-temp-ddd/editel?sharecode=ROlleZIs9Ear5Sh-n2p_XYGrf3K1k7w6S1Q3yg2nSLA"

String ssid = "Simulator Wifi"; // SSID to connect to
String password = ""; // Our virtual wifi has no password
String host = "api.thingspeak.com"; // Open Weather Map API
const int httpPort = 80;

String url = " ";
String url1 = "/update?api_key=IZMCMM7I2YRAMX19&field1=";

int l = 0;

int setupESP8266(void) {
	// Start our ESP8266 Serial Communication
	Serial.begin(115200); // Serial connection over USB to computer
	Serial.println("AT"); // Serial connection on Tx / Rx port to ESP8266
	delay(10); // Wait a little for the ESP to respond
	if (!Serial.find("OK")) return 1;

	// Connect to 123D Circuits Simulator Wifi
	Serial.println("AT+CWJAP=\"" + ssid + "\",\"" + password + "\"");
	delay(10); // Wait a little for the ESP to respond
	if (!Serial.find("OK")) return 2;

	// Open TCP connection to the host:
	Serial.println("AT+CIPSTART=\"TCP\",\"" + host + "\"," + httpPort);
	delay(50); // Wait a little for the ESP to respond
	if (!Serial.find("OK")) return 3;

	return 0;
}

void anydata(int l, String url) {

	// Construct our HTTP call
	String httpPacket = "GET " + url + String(l) + " HTTP/1.1\r\nHost: " + host +
"\r\n\r\n";
	int length = httpPacket.length();

	// Send our message length
	Serial.print("AT+CIPSEND=");
	Serial.println(length);
	delay(10); // Wait a little for the ESP to respond if (!Serial.find(">")) return -1;

	// Send our http request
	Serial.print(httpPacket);
	delay(10); // Wait a little for the ESP to respond
	if (!Serial.find("SEND OK\r\n")) return;

}

void setup() {

	setupESP8266();

}

void loop() {
	int light = map(analogRead(A1),1023,0,0,100);
	url = url1;
	anydata(light, url);
	Serial.println(light);
	Serial.println(url1);

	delay(10000);

}
